function add_go_to_cart_button(){const guardProcessor=void 0;if(void 0!==guardProcessor&&!guardProcessor())return;$(".sqs-add-to-cart-button-wrapper").each(function(){const $this=$(this),$button=$this.clone().removeAttr("data-form").removeAttr("id").removeClass("use-form"),$e=$(".sqs-add-to-cart-button",$button).attr("href","/cart").removeAttr("id data-collection-id data-item-id data-original-label data-product-type data-use-custom-label").find(".sqs-add-to-cart-button-inner").html("Go to Cart").end();const $anchorTag=$("<a>");$.each($e.prop("attributes"),function(){$anchorTag.attr(this.name,this.value)}),$e.children().appendTo($anchorTag),$e.replaceWith($anchorTag),$button.insertAfter($this)})}$(()=>{if(!("MutationObserver"in window))return;const element=document.querySelector(".sqs-add-to-cart-button");let prevState=element.classList.contains("cart-added");new MutationObserver(mutations=>{mutations.forEach(mutation=>{const{target:target}=mutation;if("class"===mutation.attributeName){const currentState=mutation.target.classList&&mutation.target.classList.contains("cart-added");prevState!==currentState&&(prevState=currentState,add_go_to_cart_button())}})}).observe(element,{attributes:!0,attributeOldValue:!0,attributeFilter:["class"]})});